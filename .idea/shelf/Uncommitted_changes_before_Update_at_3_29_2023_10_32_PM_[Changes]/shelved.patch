Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <runningDeviceTargetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"RUNNING_DEVICE_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\Matt\\.android\\avd\\Pixel_2_API_30_2.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </runningDeviceTargetSelectedWithDropDown>\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\Matt\\.android\\avd\\Pixel_2_API_30_2.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2023-03-21T15:02:36.247527300Z\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision 9cd96599e2e51ad3c2076f81e37ac0937fd4bd6b)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1679623903809)
@@ -1,17 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="deploymentTargetDropDown">
-    <runningDeviceTargetSelectedWithDropDown>
-      <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\Matt\.android\avd\Pixel_2_API_30_2.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </runningDeviceTargetSelectedWithDropDown>
     <targetSelectedWithDropDown>
       <Target>
         <type value="QUICK_BOOT_TARGET" />
Index: app/src/main/java/com/example/giftly/HomeScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.giftly;\r\n\r\nimport static android.content.ContentValues.TAG;\r\nimport static com.example.giftly.Giftly.client;\r\n\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.GradientDrawable;\r\nimport android.os.Bundle;\r\nimport android.text.InputType;\r\nimport android.util.Log;\r\nimport android.util.TypedValue;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.GridLayout;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport com.example.giftly.handler.*;\r\nimport com.google.common.util.concurrent.FutureCallback;\r\nimport com.google.common.util.concurrent.Futures;\r\n\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport android.content.Intent;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class HomeScreen extends AppCompatActivity {\r\n    public Button settingsBtn;\r\n    public Button addEventBtn;\r\n\r\n    public Button addGiftBtn;\r\n\r\n    public Button joinEventBtn;\r\n    private SharedPreferences sharedPreferences;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home_screen);\r\n\r\n\r\n        //find Users name and display it to test readUser data\r\n        TextView display = findViewById(R.id.userNameDispl);\r\n        settingsBtn = (Button) findViewById(R.id.SettingsBtn);\r\n        settingsBtn.setBackgroundColor(Color.TRANSPARENT);\r\n        addEventBtn = (Button) findViewById(R.id.addEventBtn);\r\n        joinEventBtn = (Button)findViewById(R.id.joinEvent);\r\n\r\n            //Pop up when clicking join event\r\n            joinEventBtn.setOnClickListener(view -> {\r\n                View dialogView = LayoutInflater.from(HomeScreen.this).inflate(R.layout.join_event_dialog, null);\r\n                EditText input = dialogView.findViewById(R.id.event_id_input);\r\n\r\n                new AlertDialog.Builder(HomeScreen.this)\r\n                        .setView(dialogView)\r\n                        .setPositiveButton(\"Join\", (dialog, which) -> {\r\n                            String eventId = input.getText().toString();\r\n\r\n                            Futures.addCallback(\r\n                                    client.joinEvent(eventId),\r\n                                    new FutureCallback<String>() {\r\n\r\n                                        @Override\r\n                                        public void onSuccess(String result) {\r\n                                            Log.d(TAG, \"Successfully joined event\");\r\n\r\n                                            runOnUiThread(new Runnable() {\r\n                                                @Override\r\n                                                public void run() {\r\n                                                    Toast.makeText(HomeScreen.this, result, Toast.LENGTH_SHORT).show();\r\n                                                    finish();\r\n                                                    overridePendingTransition(0, 0);\r\n                                                    startActivity(getIntent());\r\n                                                    overridePendingTransition(0, 0);\r\n                                                }\r\n                                            });\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onFailure(Throwable thrown) {\r\n\r\n                                            String message = (thrown.getMessage().isEmpty() ? \"There was a problem joining the Event\" : thrown.getMessage());\r\n\r\n                                            runOnUiThread(new Runnable() {\r\n                                                @Override\r\n                                                public void run() {\r\n                                                    Toast.makeText(HomeScreen.this, message, Toast.LENGTH_SHORT).  show();\r\n                                                }\r\n                                            });\r\n                                            Log.d(TAG, thrown.toString());\r\n                                        }\r\n                                    }, Giftly.service);\r\n\r\n                        })\r\n                        .setNegativeButton(\"Cancel\", (dialog, which) -> dialog.cancel())\r\n                        .show();\r\n            });\r\n\r\n\r\n            settingsBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeScreen.this, SettingsScreen.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n        addEventBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeScreen.this, AddEventScreen.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        //This call will display the user's name in the greeting message\r\n        Futures.addCallback(\r\n                Giftly.client.readUser(client.getAuth().getUid()),\r\n                new FutureCallback<User>() {\r\n                    @Override\r\n                    public void onSuccess(User result) {\r\n                        display.setText(result.getFullName());\r\n                        //This call will display the user's name in the greeting message\r\n                        Futures.addCallback(\r\n                                Giftly.client.readEvent(result.getEvents()),\r\n                                new FutureCallback<ArrayList<Event>>() {\r\n                                    @Override\r\n                                    public void onSuccess(ArrayList<Event> events) {\r\n                                        //anon class for updating GUI thread\r\n                                        class updateEvents implements Runnable {\r\n                                            ArrayList<Event> events;\r\n                                            updateEvents(ArrayList<Event> e) { events = e;}\r\n                                            @Override\r\n                                            public void run() {\r\n                                                LinearLayout eventList = findViewById(R.id.events);\r\n                                                Log.d(TAG, \"Adding Events to List:\");\r\n\r\n                                                TextView header = new TextView(eventList.getContext());\r\n                                                header.setText(\"Ongoing Events\");\r\n                                                header.setTextSize(20);\r\n                                                header.setPadding(32, 32, 0, 32);\r\n                                                header.setGravity(Gravity.CENTER_VERTICAL);\r\n                                                header.setTextColor(Color.WHITE);\r\n                                                header.setTypeface(Typeface.create(\"sans-serif-medium\", Typeface.BOLD));\r\n                                                GridLayout.LayoutParams paramsHeader = new GridLayout.LayoutParams();\r\n                                                paramsHeader.width = GridLayout.LayoutParams.WRAP_CONTENT;\r\n                                                paramsHeader.height = GridLayout.LayoutParams.WRAP_CONTENT;\r\n                                                paramsHeader.setMargins(32, 0, 0, 0); //left, top, right, bottom\r\n                                                header.setLayoutParams(paramsHeader);\r\n                                                eventList.addView(header);\r\n\r\n                                                GridLayout gridLayout = new GridLayout(eventList.getContext());\r\n                                                gridLayout.setColumnCount(2); // set the number of columns you want\r\n                                                for (int i = 0; i < events.size(); i++) {\r\n                                                    Button button = new Button(eventList.getContext());\r\n                                                    button.setId(i);\r\n                                                    // Set the event name to lowercase\r\n                                                    String eventName = events.get(i).getEventName().toLowerCase();\r\n                                                    // Capitalize the first letter of the event name\r\n                                                    eventName = eventName.substring(0, 1).toUpperCase() + eventName.substring(1);\r\n\r\n\r\n                                                    button.setText(eventName);\r\n\r\n                                                    //Add button layout modification stuff to make it look nice here (target button)\r\n                                                    button.setOnClickListener(new handleClick(events.get(i).getEventID()));\r\n                                                    GridLayout.LayoutParams params = new GridLayout.LayoutParams();\r\n                                                    params.setMargins(16, 16, 16, 32); //left, top, right, bottom\r\n                                                    params.width = GridLayout.LayoutParams.WRAP_CONTENT;\r\n                                                    params.height = 350;\r\n                                                    button.setLayoutParams(params);\r\n\r\n                                                    // Set the button background to a drawable with rounded corners\r\n                                                    GradientDrawable shape = new GradientDrawable();\r\n                                                    shape.setShape(GradientDrawable.RECTANGLE);\r\n                                                    shape.setCornerRadii(new float[]{20, 20, 20, 20, 20, 20, 20, 20});\r\n                                                    shape.setColor(Color.parseColor(\"#4B4B4B\"));\r\n                                                    button.setBackground(shape);\r\n\r\n                                                    button.setTextColor(Color.WHITE);\r\n                                                    button.setTextSize(15);\r\n                                                    button.setTypeface(Typeface.create(\"sans-serif-medium\", Typeface.NORMAL));\r\n                                                    gridLayout.addView(button);\r\n                                                }\r\n                                                GridLayout.LayoutParams paramsGridLayout = new GridLayout.LayoutParams();\r\n                                                paramsGridLayout.width = GridLayout.LayoutParams.WRAP_CONTENT;\r\n                                                paramsGridLayout.height = GridLayout.LayoutParams.WRAP_CONTENT;\r\n                                                paramsGridLayout.setMargins(32, 0, 32, 0); //left, top, right, bottom\r\n                                                gridLayout.setLayoutParams(paramsGridLayout);\r\n                                                eventList.addView(gridLayout);\r\n\r\n\r\n\r\n                                            }\r\n\r\n                                            class handleClick implements View.OnClickListener {\r\n                                                String eventID;\r\n                                                handleClick(String eventID) {\r\n                                                    this.eventID = eventID;\r\n                                                }\r\n                                                @Override\r\n                                                public void onClick(View view) {\r\n                                                    Log.d(TAG, eventID);\r\n                                                    Intent intent = new Intent(getApplicationContext(),DisplayEventScreen.class);\r\n                                                    intent.putExtra(\"eventID\", eventID.toString());\r\n                                                    Log.d(TAG, \"Event ID: \" + intent.getStringExtra(\"eventID\"));\r\n                                                    startActivity(intent);\r\n                                                }\r\n                                            }\r\n\r\n                                        };\r\n                                        Log.d(TAG, events.toString());\r\n                                        //update events list on GUI thread using anon class\r\n                                        runOnUiThread(new updateEvents(events));\r\n                                    }\r\n                                    @Override\r\n                                    public void onFailure(Throwable thrown) {\r\n                                    }\r\n                                }, Giftly.service\r\n                        );\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFailure(Throwable thrown) {\r\n\r\n                    }\r\n                },\r\n                Giftly.service\r\n        );\r\n\r\n        //Theme: Fetch the current color of the background\r\n        sharedPreferences = getSharedPreferences(\"MyPrefs\", Context.MODE_PRIVATE);\r\n        int savedColor = sharedPreferences.getInt(\"BackgroundColor\", ContextCompat.getColor(HomeScreen.this, R.color.Default_color));\r\n        getWindow().getDecorView().setBackgroundColor(savedColor);\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.profile_menu,menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        if(item.getItemId() == R.id.menu_item_profile){\r\n            startActivity(new Intent(HomeScreen.this, ProfileScreen.class));\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/giftly/HomeScreen.java b/app/src/main/java/com/example/giftly/HomeScreen.java
--- a/app/src/main/java/com/example/giftly/HomeScreen.java	(revision 9cd96599e2e51ad3c2076f81e37ac0937fd4bd6b)
+++ b/app/src/main/java/com/example/giftly/HomeScreen.java	(date 1679624392923)
@@ -175,7 +175,6 @@
                                                     // Capitalize the first letter of the event name
                                                     eventName = eventName.substring(0, 1).toUpperCase() + eventName.substring(1);
 
-
                                                     button.setText(eventName);
 
                                                     //Add button layout modification stuff to make it look nice here (target button)
